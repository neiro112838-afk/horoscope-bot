#!/usr/bin/env python3
import os
import random
import asyncio
from datetime import datetime, timedelta
from aiogram import Bot, Dispatcher, F, types
from aiogram.enums.parse_mode import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiohttp import web

# ---------------- 40 –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π + 20 —Å–æ–≤–µ—Ç–æ–≤ ----------------
PRED = [
    "–°–µ–≥–æ–¥–Ω—è –∑–≤—ë–∑–¥—ã —Å–æ–≤–µ—Ç—É—é—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å–º–µ–ª–æ ‚Äî —É–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ.",
    "–ù–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö —Ç—Ä–∞—Ç; –ª—É—á—à–µ –ø–æ–¥—É–º–∞—Ç—å —Ç—Ä–∏–∂–¥—ã.",
    "–í—Å—Ç—Ä–µ—á–∞, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –∂–¥—ë—à—å, –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç —Ä–∞–Ω—å—à–µ, —á–µ–º –æ–∂–∏–¥–∞–µ—à—å.",
    "–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π –¥–µ–ª–∞ ¬´–Ω–∞ –ø–æ—Ç–æ–º¬ª ‚Äî –∑–∞–≤—Ç—Ä–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–¥–Ω–æ.",
    "–¢–µ–±—è –∂–¥—ë—Ç –ø—Ä–∏—è—Ç–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑ –æ—Ç —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–≤–∞–µ—à—å.",
    "–≠–Ω–µ—Ä–≥–∏—è –¥–Ω—è ‚Äî –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞: –ø–æ–ø—Ä–æ–±—É–π —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ.",
    "–£—Ç—Ä–æ –Ω–∞—á–Ω–∏ —Å —á–∞—à–∫–∏ –≤–æ–¥—ã ‚Äî —ç–Ω–µ—Ä–≥–∏—è –ø–æ–≤—ã—Å–∏—Ç—Å—è.",
    "–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π –∑–≤–æ–Ω–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–≤–Ω–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å.",
    "–í–µ—á–µ—Ä–æ–º –ø–æ–ª—É—á–∏—à—å –ø—Ä–∏—è—Ç–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å.",
    "–°–ª—É—à–∞–π –∏–Ω—Ç—É–∏—Ü–∏—é: –æ–Ω–∞ –ø–æ–¥—Å–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä.",
    "–ü–æ—è–≤–∏—Ç—Å—è —à–∞–Ω—Å –ø—Ä–æ—è–≤–∏—Ç—å —Å–µ–±—è ‚Äî –Ω–µ —É–ø—É—Å—Ç–∏.",
    "–°–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∏–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π.",
    "–ù–µ –±–æ–π—Å—è –ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏ ‚Äî —Ç–µ–±–µ –æ—Ö–æ—Ç–Ω–æ –ø–æ–º–æ–≥—É—Ç.",
    "–ú–µ–ª–∫–∞—è –ø–æ–∫—É–ø–∫–∞ –ø–æ–¥–Ω–∏–º–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.",
    "–ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –∑–∞–∫–æ–Ω—á–∏—Ç—å –¥–µ–ª–∞ –¥–æ –æ–±–µ–¥–∞ ‚Äî –≤–µ—á–µ—Ä –±—É–¥–µ—Ç —Å–≤–æ–±–æ–¥–Ω–µ–µ.",
    "–¢–µ–±—è –∂–¥—ë—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç.",
    "–ü—Ä–æ–≥—É–ª–∫–∞ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ –ø—Ä–∏–Ω–µ—Å—ë—Ç –∏–¥–µ—é.",
    "–ù–µ —Å–ø–æ—Ä—å —Å –±–ª–∏–∑–∫–∏–º–∏ ‚Äî –¥–µ–Ω—å –ø—Ä–æ–π–¥—ë—Ç –≥–ª–∞–¥–∫–æ.",
    "–ü–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç –ø—Ä–∏–¥—ë—Ç –æ—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.",
    "–°—Ç–∞—Ä–∞–π—Å—è –¥–≤–∏–≥–∞—Ç—å—Å—è —á—É—Ç—å –±—ã—Å—Ç—Ä–µ–µ –æ–±—ã—á–Ω–æ–≥–æ ‚Äî —É—Å–ø–µ–µ—à—å –±–æ–ª—å—à–µ.",
    "–°–µ–≥–æ–¥–Ω—è —É–¥–∞—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –æ–±—É—á–µ–Ω–∏—è.",
    "–ü–æ–ª—É—á–∏—à—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—Ä—É–¥–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å.",
    "–ù–µ –∑–∞–±—ã–≤–∞–π —Å–∫–∞–∑–∞—Ç—å ¬´—Å–ø–∞—Å–∏–±–æ¬ª ‚Äî —ç—Ç–æ –≤–µ—Ä–Ω—ë—Ç—Å—è —Å—Ç–æ—Ä–∏—Ü–µ–π.",
    "–•–æ—Ä–æ—à–∏–π –º–æ–º–µ–Ω—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫.",
    "–°–¥–µ–ª–∞–π –ø–∞—É–∑—É –ø–µ—Ä–µ–¥ –æ—Ç–≤–µ—Ç–æ–º ‚Äî –∏–∑–±–µ–∂–∏—à—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞.",
    "–¢—ã –æ–∫–∞–∂–µ—à—å—Å—è –≤ –Ω—É–∂–Ω–æ–º –º–µ—Å—Ç–µ –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è.",
    "–ú—É–∑—ã–∫–∞ –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—á–∏–π –ª–∞–¥.",
    "–°–µ–≥–æ–¥–Ω—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –æ–∂–∏–¥–∞–µ—à—å.",
    "–ü–æ–ª–µ–∑–Ω–æ —É–±—Ä–∞—Ç—å —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ ‚Äî —É–ª—É—á—à–∏—Ç—Å—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è.",
    "–ù–µ –±–æ–π—Å—è –º–µ–Ω—è—Ç—å –ø–ª–∞–Ω—ã ‚Äî –æ–Ω–∏ —Å—Ç–∞–Ω—É—Ç –ª—É—á—à–µ.",
    "–ü–æ–¥–∞—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–≤–Ω–æ —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å, –±—É–¥–µ—Ç –ø—Ä–∏–Ω—è—Ç —Å —Ä–∞–¥–æ—Å—Ç—å—é.",
    "–í–µ—á–µ—Ä –ø—Ä–æ–≤–µ–¥–∏ —Å –ª—é–±–∏–º—ã–º —Ñ–∏–ª—å–º–æ–º ‚Äî –æ—Ç–¥–æ—Ö–Ω—ë—à—å.",
    "–°—Ç–∞—Ä–∞–π—Å—è –ø–∏—Ç—å –≤–æ–¥—É –∫–∞–∂–¥—ã–π —á–∞—Å ‚Äî —ç–Ω–µ—Ä–≥–∏—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è.",
    "–ü–æ—è–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å ‚Äî –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è.",
    "–°–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∏–π –¥–µ–Ω—å –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞.",
    "–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —Ç–æ, —á—Ç–æ –∑–∞–π–º—ë—Ç 5 –º–∏–Ω—É—Ç.",
    "–¢—ã –ø–æ–ª—É—á–∏—à—å –∑–Ω–∞–∫, —á—Ç–æ –≤—Å—ë –∏–¥—ë—Ç –ø–æ –ø–ª–∞–Ω—É.",
    "–ü–æ–ª–µ–∑–Ω–æ –≤—ã—Å–ø–∞—Ç—å—Å—è ‚Äî –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –¥–µ–Ω—å.",
    "–ù–µ –∑–∞–±—ã–≤–∞–π —Ö–≤–∞–ª–∏—Ç—å —Å–µ–±—è ‚Äî –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å.",
    "–°–ª—É—á–∞–π–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ –ø–æ–¥–∞—Ä–∏—Ç –ø–æ–ª–µ–∑–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç.",
    "–°–¥–µ–ª–∞–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –∫–æ–ª–ª–µ–≥–µ ‚Äî —É–ª—É—á—à–∏—Ç—Å—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.",
    "–°–µ–≥–æ–¥–Ω—è —É–¥–∞—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–æ–≤.",
    "–ù–µ –ø–µ—Ä–µ–µ–¥–∞–π –Ω–∞ –Ω–æ—á—å ‚Äî —Å–æ–Ω –±—É–¥–µ—Ç –∫—Ä–µ–ø—á–µ.",
    "–ü–æ—Å—Ç–∞—Ä–∞–π—Å—è —É–ª—ã–±–∞—Ç—å—Å—è —á–∞—â–µ ‚Äî –ª—é–¥–∏ –æ—Ç–≤–µ—Ç—è—Ç —Ç–µ–º –∂–µ.",
]

ADV = [
    "–°–æ–≤–µ—Ç: –≤—ã–ø–µ–π —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã –∏ —É–ª—ã–±–Ω–∏—Å—å.",
    "–°–æ–≤–µ—Ç: –ø—Ä–æ–≥—É–ª—è–π—Å—è 20 –º–∏–Ω—É—Ç –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
    "–°–æ–≤–µ—Ç: —Å–¥–µ–ª–∞–π —Ç–æ, —á—Ç–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é.",
    "–°–æ–≤–µ—Ç: –ø–æ–∑–≤–æ–Ω–∏ –±–ª–∏–∑–∫–æ–º—É –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫.",
    "–°–æ–≤–µ—Ç: –ø—Ä–æ–≤–µ–¥–∏ 10 –º–∏–Ω—É—Ç –≤ —Ç–∏—à–∏–Ω–µ.",
    "–°–æ–≤–µ—Ç: —Å–æ—Å—Ç–∞–≤—å —Å–ø–∏—Å–æ–∫ –∏–∑ 3 –∑–∞–¥–∞—á –Ω–∞ –¥–µ–Ω—å.",
    "–°–æ–≤–µ—Ç: –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏ —Å–µ–±—è –∑–∞ –≤—á–µ—Ä–∞—à–Ω–µ–µ.",
    "–°–æ–≤–µ—Ç: –≤–∫–ª—é—á–∏ –ª—é–±–∏–º—É—é –º—É–∑—ã–∫—É –∏ —Ä–∞—Å—Å–ª–∞–±—å—Å—è.",
    "–°–æ–≤–µ—Ç: —É–±–µ—Ä–∏ —Å–æ —Å—Ç–æ–ª–∞ ‚Äì –º—ã—Å–ª–∏ —Å—Ç–∞–Ω—É—Ç —è—Å–Ω–µ–µ.",
    "–°–æ–≤–µ—Ç: –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–π –ø–æ—á—Ç—É –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.",
    "–°–æ–≤–µ—Ç: —Å—ä–µ—à—å —Ñ—Ä—É–∫—Ç –≤–º–µ—Å—Ç–æ —Å–ª–∞–¥–∫–æ–≥–æ.",
    "–°–æ–≤–µ—Ç: –≤—ã–π–¥–∏ –Ω–∞ –±–∞–ª–∫–æ–Ω/—É–ª–∏—Ü—É ‚Äì –ø–æ–¥—ã—à–∏ –≤–æ–∑–¥—É—Ö–æ–º.",
    "–°–æ–≤–µ—Ç: –Ω–∞–ø–∏—à–∏ 3 –≤–µ—â–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω.",
    "–°–æ–≤–µ—Ç: –ø–æ–º–µ–Ω—è–π –ø–æ–∑—É ‚Äì –≤—ã–ø—Ä—è–º–∏ —Å–ø–∏–Ω—É.",
    "–°–æ–≤–µ—Ç: —Å–¥–µ–ª–∞–π 10 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π –∏–ª–∏ 5 –≥–ª—É–±–æ–∫–∏—Ö –≤–¥–æ—Ö–æ–≤.",
    "–°–æ–≤–µ—Ç: –∑–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –Ω–∞ 30 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–ª—É—à–∞–π.",
    "–°–æ–≤–µ—Ç: –æ—Ç–ª–æ–∂–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞ 30 –º–∏–Ω –¥–æ —Å–Ω–∞.",
    "–°–æ–≤–µ—Ç: —É–ª—ã–±–Ω–∏—Å—å —Å–µ–±–µ –≤ –∑–µ—Ä–∫–∞–ª–æ.",
    "–°–æ–≤–µ—Ç: –ø–æ–º–æ–≥–∏ –∫–æ–º—É-—Ç–æ –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã.",
    "–°–æ–≤–µ—Ç: –Ω–∞—á–Ω–∏ —É—Ç—Ä–æ —Å–æ —Å—Ç–∞–∫–∞–Ω–∞ —Ç—ë–ø–ª–æ–π –≤–æ–¥—ã.",
]

# ---------- 2. –†—É—Å—Å–∫–∏–µ –∑–Ω–∞–∫–∏ ----------
ZODIACS = ["‚ôà –û–≤–µ–Ω", "‚ôâ –¢–µ–ª–µ—Ü", "‚ôä –ë–ª–∏–∑–Ω–µ—Ü—ã", "‚ôã –†–∞–∫",
           "‚ôå –õ–µ–≤", "‚ôç –î–µ–≤–∞", "‚ôé –í–µ—Å—ã", "‚ôè –°–∫–æ—Ä–ø–∏–æ–Ω",
           "‚ôê –°—Ç—Ä–µ–ª–µ—Ü", "‚ôë –ö–æ–∑–µ—Ä–æ–≥", "‚ôí –í–æ–¥–æ–ª–µ–π", "‚ôì –†—ã–±—ã"]

# ---------- 3. /help ----------
async def cmd_help(m: types.Message):
    await m.answer(
        "üåü <b>–ü—Ä–∏–≤–µ—Ç!</b>\n\n"
        "–Ø –ø—Ä–∏—Å—ã–ª–∞—é –∫–æ—Ä–æ—Ç–∫–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø –∏ –ø–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç –Ω–∞ –¥–µ–Ω—å.\n"
        "–ù–∞–∂–º–∏ /start –∏ –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞.\n\n"
        "–ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ –º–æ–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞—Å—Å—ã–ª–∫—É ‚Äì –∫–æ–º–∞–Ω–¥–∞ /subscribe",
        parse_mode=ParseMode.HTML
    )

# ---------- 4. –ü–æ–¥–ø–∏—Å–∫–∞ ¬´–∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ¬ª ----------
USERS_DB = set()                      # {user_id, ...}
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))   # –∫—Ç–æ –ø–æ–ª—É—á–∏—Ç –æ—Ç—á—ë—Ç –æ —Ä–∞—Å—Å—ã–ª–∫–µ

async def subscribe(m: types.Message):
    USERS_DB.add(m.from_user.id)
    await m.answer("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 8:00 –ø–æ –ú–°–ö —è –ø—Ä–∏—à–ª—é –≥–æ—Ä–æ—Å–∫–æ–ø.")

async def unsubscribe(m: types.Message):
    USERS_DB.discard(m.from_user.id)
    await m.answer("‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞.")

async def send_daily():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ —Ä–∞—Å—Å—ã–ª–∞–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø—ã –≤ 8:00 –ú–°–ö –∫–∞–∂–¥—ã–π –¥–µ–Ω—å."""
    if ADMIN_ID:
        await bot.send_message(ADMIN_ID, f"üì¢ –†–∞—Å—Å—ã–ª–∞—é —É—Ç—Ä–µ–Ω–Ω–∏–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã ({len(USERS_DB)} —á–µ–ª.)‚Ä¶")
    for uid in USERS_DB:
        try:
            zodiac = random.choice(ZODIACS)
            await bot.send_message(
                uid,
                f"{zodiac}\nüîÆ <b>{random.choice(PRED)}</b>\nüí° <b>{random.choice(ADV)}</b>",
                parse_mode=ParseMode.HTML
            )
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {uid}: {e}")
    if ADMIN_ID:
        await bot.send_message(ADMIN_ID, "üì¨ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

async def scheduler():
    """–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –∂–¥—ë–º 8:00 –ú–°–ö –∏ –∑–∞–ø—É—Å–∫–∞–µ–º send_daily()."""
    while True:
        now = datetime.now()
        next_8 = now.replace(hour=8, minute=0, second=0, microsecond=0)
        if now >= next_8:
            next_8 += timedelta(days=1)
        await asyncio.sleep((next_8 - now).total_seconds())
        await send_daily()

# ---------- –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–Ω–¥-–ø–æ–∏–Ω—Ç –¥–ª—è Web Service ----------
async def health(request):
    return web.Response(text="OK")

# ---------- —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤ ----------
def register_handlers(dp: Dispatcher):
    dp.message.register(cmd_help, F.text == "/help")
    dp.message.register(start, F.text == "/start")
    dp.message.register(subscribe, F.text == "/subscribe")
    dp.message.register(unsubscribe, F.text == "/unsubscribe")
    dp.callback_query.register(horo, F.data.startswith("z_"))

async def start(m: types.Message):
    kb = [[types.InlineKeyboardButton(text=z, callback_data=f"z_{i}")]
          for i, z in enumerate(ZODIACS)]
    await m.answer("üåü –í—ã–±–µ—Ä–∏ —Å–≤–æ–π –∑–Ω–∞–∫:", reply_markup=types.InlineKeyboardMarkup(inline_keyboard=kb))

async def horo(c: types.CallbackQuery):
    z_idx = int(c.data.split("_")[1])
    zodiac = ZODIACS[z_idx]
    text = f"{zodiac}\nüîÆ <b>{random.choice(PRED)}</b>\nüí° <b>{random.choice(ADV)}</b>"
    await c.message.answer(text, parse_mode=ParseMode.HTML)
    await c.answer()

# ---------- –∑–∞–ø—É—Å–∫ ----------
bot: Bot

async def on_startup(app: web.Application):
    global bot
    bot = Bot(token=os.environ["TOKEN"], default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher()
    register_handlers(dp)
    # —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
    asyncio.create_task(dp.start_polling(bot))
    asyncio.create_task(scheduler())

async def web_main():
    app = web.Application()
    app.router.add_get("/", health)      # ¬´—Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ¬ª –¥–ª—è Render
    app.on_startup.append(on_startup)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", int(os.getenv("PORT", 8080)))
    await site.start()
    await asyncio.Event().wait()         # —Ä–∞–±–æ—Ç–∞–µ–º –≤–µ—á–Ω–æ

if __name__ == "__main__":
    asyncio.run(web_main())
